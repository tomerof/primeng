{"version":3,"file":"primeng-megamenu.mjs","sources":["../../src/app/components/megamenu/megamenu.ts","../../src/app/components/megamenu/primeng-megamenu.ts"],"sourcesContent":["import { NgModule, Component, ElementRef, Input, Renderer2, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, AfterContentInit, ContentChildren, QueryList, TemplateRef, Inject, PLATFORM_ID } from '@angular/core';\r\nimport { CommonModule, DOCUMENT, isPlatformBrowser } from '@angular/common';\r\nimport { MegaMenuItem, MenuItem, PrimeTemplate, SharedModule } from 'primeng/api';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { AngleDownIcon } from 'primeng/icons/angledown';\r\nimport { AngleRightIcon } from 'primeng/icons/angleright';\r\n\r\n@Component({\r\n    selector: 'p-megaMenu',\r\n    template: `\r\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" [ngClass]=\"{ 'p-megamenu p-component': true, 'p-megamenu-horizontal': orientation == 'horizontal', 'p-megamenu-vertical': orientation == 'vertical' }\">\r\n            <div class=\"p-megamenu-start\" *ngIf=\"startTemplate\">\r\n                <ng-container *ngTemplateOutlet=\"startTemplate\"></ng-container>\r\n            </div>\r\n            <ul class=\"p-megamenu-root-list\" role=\"menubar\">\r\n                <ng-template ngFor let-category [ngForOf]=\"model\">\r\n                    <li *ngIf=\"category.separator\" class=\"p-menu-separator\" [ngClass]=\"{ 'p-hidden': category.visible === false }\"></li>\r\n                    <li\r\n                        *ngIf=\"!category.separator\"\r\n                        [ngClass]=\"{ 'p-menuitem': true, 'p-menuitem-active': category == activeItem, 'p-hidden': category.visible === false }\"\r\n                        pTooltip\r\n                        [tooltipOptions]=\"category.tooltipOptions\"\r\n                        (mouseenter)=\"onCategoryMouseEnter($event, category)\"\r\n                    >\r\n                        <a\r\n                            *ngIf=\"!category.routerLink\"\r\n                            [href]=\"category.url || '#'\"\r\n                            [target]=\"category.target\"\r\n                            [attr.title]=\"category.title\"\r\n                            [attr.id]=\"category.id\"\r\n                            (click)=\"onCategoryClick($event, category)\"\r\n                            [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\"\r\n                            [ngClass]=\"{ 'p-menuitem-link': true, 'p-disabled': category.disabled }\"\r\n                            [ngStyle]=\"category.style\"\r\n                            [class]=\"category.styleClass\"\r\n                            pRipple\r\n                        >\r\n                            <span class=\"p-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\r\n                            <span class=\"p-menuitem-text\" *ngIf=\"category.escape !== false; else categoryHtmlLabel\">{{ category.label }}</span>\r\n                            <ng-template #categoryHtmlLabel><span class=\"p-menuitem-text\" [innerHTML]=\"category.label\"></span></ng-template>\r\n                            <span class=\"p-menuitem-badge\" *ngIf=\"category.badge\" [ngClass]=\"category.badgeStyleClass\">{{ category.badge }}</span>\r\n                            <ng-container *ngIf=\"!submenuIconTemplate\">\r\n                                <AngleDownIcon [styleClass]=\"'p-submenu-icon'\" *ngIf=\"orientation === 'horizontal'\"/>\r\n                                <AngleRightIcon [styleClass]=\"'p-submenu-icon'\" *ngIf=\"orientation === 'vertical'\"/>\r\n                            </ng-container>\r\n                            <ng-template *ngTemplateOutlet=\"submenuIconTemplate\"></ng-template>\r\n                        </a>\r\n                        <a\r\n                            *ngIf=\"category.routerLink\"\r\n                            [routerLink]=\"category.routerLink\"\r\n                            [queryParams]=\"category.queryParams\"\r\n                            [routerLinkActive]=\"'p-menuitem-link-active'\"\r\n                            [routerLinkActiveOptions]=\"category.routerLinkActiveOptions || { exact: false }\"\r\n                            [attr.tabindex]=\"category.tabindex ? category.tabindex : '0'\"\r\n                            [target]=\"category.target\"\r\n                            [attr.title]=\"category.title\"\r\n                            [attr.id]=\"category.id\"\r\n                            (click)=\"onCategoryClick($event, category)\"\r\n                            [ngClass]=\"{ 'p-menuitem-link': true, 'p-disabled': category.disabled }\"\r\n                            [ngStyle]=\"category.style\"\r\n                            [class]=\"category.styleClass\"\r\n                            [fragment]=\"category.fragment\"\r\n                            [queryParamsHandling]=\"category.queryParamsHandling\"\r\n                            [preserveFragment]=\"category.preserveFragment\"\r\n                            [skipLocationChange]=\"category.skipLocationChange\"\r\n                            [replaceUrl]=\"category.replaceUrl\"\r\n                            [state]=\"category.state\"\r\n                            pRipple\r\n                        >\r\n                            <span class=\"p-menuitem-icon\" *ngIf=\"category.icon\" [ngClass]=\"category.icon\"></span>\r\n                            <span class=\"p-menuitem-text\" *ngIf=\"category.escape !== false; else categoryHtmlRouteLabel\">{{ category.label }}</span>\r\n                            <ng-template #categoryHtmlRouteLabel><span class=\"p-menuitem-text\" [innerHTML]=\"category.label\"></span></ng-template>\r\n                            <span class=\"p-menuitem-badge\" *ngIf=\"category.badge\" [ngClass]=\"category.badgeStyleClass\">{{ category.badge }}</span>\r\n                        </a>\r\n                        <div class=\"p-megamenu-panel\" *ngIf=\"category.items\">\r\n                            <div class=\"p-megamenu-grid\">\r\n                                <ng-template ngFor let-column [ngForOf]=\"category.items\">\r\n                                    <div [class]=\"getColumnClass(category)\">\r\n                                        <ng-template ngFor let-submenu [ngForOf]=\"column\">\r\n                                            <ul class=\"p-megamenu-submenu\" role=\"menu\">\r\n                                                <li class=\"p-megamenu-submenu-header\">\r\n                                                    <span *ngIf=\"submenu.escape !== false; else submenuHtmlLabel\">{{ submenu.label }}</span>\r\n                                                    <ng-template #submenuHtmlLabel><span [innerHTML]=\"submenu.label\"></span></ng-template>\r\n                                                    <span class=\"p-menuitem-badge\" *ngIf=\"submenu.badge\" [ngClass]=\"submenu.badgeStyleClass\">{{ submenu.badge }}</span>\r\n                                                </li>\r\n                                                <ng-template ngFor let-item [ngForOf]=\"submenu.items\">\r\n                                                    <li *ngIf=\"item.separator\" class=\"p-menu-separator\" [ngClass]=\"{ 'p-hidden': item.visible === false }\" role=\"separator\"></li>\r\n                                                    <li *ngIf=\"!item.separator\" class=\"p-menuitem\" [ngClass]=\"{ 'p-hidden': item.visible === false }\" role=\"none\" pTooltip [tooltipOptions]=\"item.tooltipOptions\">\r\n                                                        <a\r\n                                                            *ngIf=\"!item.routerLink\"\r\n                                                            role=\"menuitem\"\r\n                                                            [href]=\"item.url || '#'\"\r\n                                                            class=\"p-menuitem-link\"\r\n                                                            [target]=\"item.target\"\r\n                                                            [attr.title]=\"item.title\"\r\n                                                            [attr.id]=\"item.id\"\r\n                                                            [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\r\n                                                            [ngClass]=\"{ 'p-disabled': item.disabled }\"\r\n                                                            [ngStyle]=\"item.style\"\r\n                                                            [class]=\"item.styleClass\"\r\n                                                            (click)=\"itemClick($event, item)\"\r\n                                                            pRipple\r\n                                                        >\r\n                                                            <span class=\"p-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\" [ngStyle]=\"item.iconStyle\"></span>\r\n                                                            <span class=\"p-menuitem-text\" *ngIf=\"item.escape !== false; else htmlLabel\">{{ item.label }}</span>\r\n                                                            <ng-template #htmlLabel><span class=\"p-menuitem-text\" [innerHTML]=\"item.label\"></span></ng-template>\r\n                                                            <span class=\"p-menuitem-badge\" *ngIf=\"item.badge\" [ngClass]=\"item.badgeStyleClass\">{{ item.badge }}</span>\r\n                                                        </a>\r\n                                                        <a\r\n                                                            *ngIf=\"item.routerLink\"\r\n                                                            role=\"menuitem\"\r\n                                                            [routerLink]=\"item.routerLink\"\r\n                                                            [queryParams]=\"item.queryParams\"\r\n                                                            [routerLinkActive]=\"'p-menuitem-link-active'\"\r\n                                                            [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\r\n                                                            [routerLinkActiveOptions]=\"item.routerLinkActiveOptions || { exact: false }\"\r\n                                                            class=\"p-menuitem-link\"\r\n                                                            [target]=\"item.target\"\r\n                                                            [attr.title]=\"item.title\"\r\n                                                            [attr.id]=\"item.id\"\r\n                                                            [ngClass]=\"{ 'p-disabled': item.disabled }\"\r\n                                                            [ngStyle]=\"item.style\"\r\n                                                            [class]=\"item.styleClass\"\r\n                                                            (click)=\"itemClick($event, item)\"\r\n                                                            [fragment]=\"item.fragment\"\r\n                                                            [queryParamsHandling]=\"item.queryParamsHandling\"\r\n                                                            [preserveFragment]=\"item.preserveFragment\"\r\n                                                            [skipLocationChange]=\"item.skipLocationChange\"\r\n                                                            [replaceUrl]=\"item.replaceUrl\"\r\n                                                            [state]=\"item.state\"\r\n                                                            pRipple\r\n                                                        >\r\n                                                            <span class=\"p-menuitem-icon\" *ngIf=\"item.icon\" [ngClass]=\"item.icon\" [ngStyle]=\"item.iconStyle\"></span>\r\n                                                            <span class=\"p-menuitem-text\" *ngIf=\"item.escape !== false; else htmlRouteLabel\">{{ item.label }}</span>\r\n                                                            <ng-template #htmlRouteLabel><span class=\"p-menuitem-text\" [innerHTML]=\"item.label\"></span></ng-template>\r\n                                                            <span class=\"p-menuitem-badge\" *ngIf=\"item.badge\" [ngClass]=\"item.badgeStyleClass\">{{ item.badge }}</span>\r\n                                                        </a>\r\n                                                    </li>\r\n                                                </ng-template>\r\n                                            </ul>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ng-template>\r\n            </ul>\r\n            <div class=\"p-megamenu-end\" *ngIf=\"endTemplate; else legacy\">\r\n                <ng-container *ngTemplateOutlet=\"endTemplate\"></ng-container>\r\n            </div>\r\n            <ng-template #legacy>\r\n                <div class=\"p-megamenu-end\">\r\n                    <ng-content></ng-content>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./megamenu.css'],\r\n    host: {\r\n        class: 'p-element'\r\n    }\r\n})\r\nexport class MegaMenu implements AfterContentInit {\r\n    @Input() model: MegaMenuItem[];\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() orientation: string = 'horizontal';\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    activeItem: any;\r\n\r\n    documentClickListener: () => void | null;\r\n\r\n    startTemplate: TemplateRef<any>;\r\n\r\n    endTemplate: TemplateRef<any>;\r\n\r\n    submenuIconTemplate: TemplateRef<any>;\r\n\r\n    constructor(@Inject(DOCUMENT) private document: Document, @Inject(PLATFORM_ID) private platformId: any, public el: ElementRef, public renderer: Renderer2, public cd: ChangeDetectorRef) {}\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'start':\r\n                    this.startTemplate = item.template;\r\n                    break;\r\n\r\n                case 'submenuicon':\r\n                    this.submenuIconTemplate = item.template;\r\n                    break;\r\n\r\n                case 'end':\r\n                    this.endTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    onCategoryMouseEnter(event, menuitem: MegaMenuItem) {\r\n        if (menuitem.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (this.activeItem) {\r\n            this.activeItem = menuitem;\r\n        }\r\n    }\r\n\r\n    onCategoryClick(event, item: MenuItem | MegaMenuItem) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (!item.url && !item.routerLink) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n\r\n        if (item.items) {\r\n            if (this.activeItem && this.activeItem === item) {\r\n                this.activeItem = null;\r\n                this.unbindDocumentClickListener();\r\n            } else {\r\n                this.activeItem = item;\r\n                this.bindDocumentClickListener();\r\n            }\r\n        }\r\n    }\r\n\r\n    itemClick(event: MouseEvent, item: MenuItem | MegaMenuItem) {\r\n        if (item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        if (!item.url && !item.routerLink) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (item.command) {\r\n            item.command({\r\n                originalEvent: event,\r\n                item: item\r\n            });\r\n        }\r\n\r\n        this.activeItem = null;\r\n    }\r\n\r\n    getColumnClass(menuitem: MegaMenuItem) {\r\n        let length = menuitem.items ? menuitem.items.length : 0;\r\n        let columnClass;\r\n        switch (length) {\r\n            case 2:\r\n                columnClass = 'p-megamenu-col-6';\r\n                break;\r\n\r\n            case 3:\r\n                columnClass = 'p-megamenu-col-4';\r\n                break;\r\n\r\n            case 4:\r\n                columnClass = 'p-megamenu-col-3';\r\n                break;\r\n\r\n            case 6:\r\n                columnClass = 'p-megamenu-col-2';\r\n                break;\r\n\r\n            default:\r\n                columnClass = 'p-megamenu-col-12';\r\n                break;\r\n        }\r\n\r\n        return columnClass;\r\n    }\r\n\r\n    bindDocumentClickListener() {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (!this.documentClickListener) {\r\n                this.documentClickListener = this.renderer.listen(this.document, 'click', (event) => {\r\n                    if (this.el && !this.el.nativeElement.contains(event.target)) {\r\n                        this.activeItem = null;\r\n                        this.unbindDocumentClickListener();\r\n                        this.cd.markForCheck();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    unbindDocumentClickListener() {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n            this.documentClickListener = null;\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule, RippleModule, TooltipModule, SharedModule, AngleDownIcon, AngleRightIcon],\r\n    exports: [MegaMenu, RouterModule, TooltipModule, SharedModule],\r\n    declarations: [MegaMenu]\r\n})\r\nexport class MegaMenuModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}