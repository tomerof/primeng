{"version":3,"file":"primeng-dataview.mjs","sources":["../../src/app/components/dataview/dataview.ts","../../src/app/components/dataview/primeng-dataview.ts"],"sourcesContent":["import {\r\n    NgModule,\r\n    Component,\r\n    ElementRef,\r\n    OnInit,\r\n    AfterContentInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ContentChild,\r\n    ContentChildren,\r\n    QueryList,\r\n    TemplateRef,\r\n    OnChanges,\r\n    SimpleChanges,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    ViewEncapsulation,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ObjectUtils } from 'primeng/utils';\r\nimport { Header, Footer, PrimeTemplate, SharedModule, FilterService, TranslationKeys, PrimeNGConfig } from 'primeng/api';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { BlockableUI } from 'primeng/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { SpinnerIcon } from 'primeng/icons/spinner';\r\nimport { ThLargeIcon } from 'primeng/icons/thlarge';\r\nimport { BarsIcon } from 'primeng/icons/bars';\r\n\r\n@Component({\r\n    selector: 'p-dataView',\r\n    template: `\r\n        <div [ngClass]=\"{ 'p-dataview p-component': true, 'p-dataview-list': layout === 'list', 'p-dataview-grid': layout === 'grid' }\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <div class=\"p-dataview-loading\" *ngIf=\"loading\">\r\n                <div class=\"p-dataview-loading-overlay p-component-overlay\">\r\n                    <i *ngIf=\"loadingIcon\" [class]=\"'p-dataview-loading-icon pi-spin ' + loadingIcon\"></i>\r\n                    <ng-container *ngIf=\"!loadingIcon\">\r\n                        <SpinnerIcon *ngIf=\"!loadingIconTemplate\" [spin]=\"true\" [styleClass]=\"'p-dataview-loading-icon'\"/>\r\n                        <ng-template *ngTemplateOutlet=\"loadingIconTemplate\"></ng-template>\r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-dataview-header\" *ngIf=\"header || headerTemplate\">\r\n                <ng-content select=\"p-header\"></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n            </div>\r\n            <p-paginator\r\n                [rows]=\"rows\"\r\n                [first]=\"first\"\r\n                [totalRecords]=\"totalRecords\"\r\n                [pageLinkSize]=\"pageLinks\"\r\n                [alwaysShow]=\"alwaysShowPaginator\"\r\n                (onPageChange)=\"paginate($event)\"\r\n                styleClass=\"p-paginator-top\"\r\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n                *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition == 'both')\"\r\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\r\n                [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\r\n                [templateLeft]=\"paginatorLeftTemplate\"\r\n                [templateRight]=\"paginatorRightTemplate\"\r\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\r\n                [showFirstLastIcon]=\"showFirstLastIcon\"\r\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\"\r\n                [showCurrentPageReport]=\"showCurrentPageReport\"\r\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\r\n                [showPageLinks]=\"showPageLinks\"\r\n            ></p-paginator>\r\n            <div class=\"p-dataview-content\">\r\n                <div class=\"p-grid p-nogutter grid grid-nogutter\" [ngClass]=\"gridStyleClass\">\r\n                    <ng-template ngFor let-rowData let-rowIndex=\"index\" [ngForOf]=\"paginator ? (filteredValue || value | slice: (lazy ? 0 : first):(lazy ? 0 : first) + rows) : filteredValue || value\" [ngForTrackBy]=\"trackBy\">\r\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: rowData, rowIndex: rowIndex }\"></ng-container>\r\n                    </ng-template>\r\n                    <div *ngIf=\"isEmpty() && !loading\" class=\"p-col col\">\r\n                        <div class=\"p-dataview-emptymessage\">\r\n                            <ng-container *ngIf=\"!emptyMessageTemplate; else emptyFilter\">\r\n                                {{ emptyMessageLabel }}\r\n                            </ng-container>\r\n                            <ng-container #emptyFilter *ngTemplateOutlet=\"emptyMessageTemplate\"></ng-container>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <p-paginator\r\n                [rows]=\"rows\"\r\n                [first]=\"first\"\r\n                [totalRecords]=\"totalRecords\"\r\n                [pageLinkSize]=\"pageLinks\"\r\n                [alwaysShow]=\"alwaysShowPaginator\"\r\n                (onPageChange)=\"paginate($event)\"\r\n                styleClass=\"p-paginator-bottom\"\r\n                [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n                *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition == 'both')\"\r\n                [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\r\n                [dropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\r\n                [templateLeft]=\"paginatorLeftTemplate\"\r\n                [templateRight]=\"paginatorRightTemplate\"\r\n                [currentPageReportTemplate]=\"currentPageReportTemplate\"\r\n                [showFirstLastIcon]=\"showFirstLastIcon\"\r\n                [dropdownItemTemplate]=\"paginatorDropdownItemTemplate\"\r\n                [showCurrentPageReport]=\"showCurrentPageReport\"\r\n                [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\r\n                [showPageLinks]=\"showPageLinks\"\r\n            ></p-paginator>\r\n            <div class=\"p-dataview-footer\" *ngIf=\"footer || footerTemplate\">\r\n                <ng-content select=\"p-footer\"></ng-content>\r\n                <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n            </div>\r\n        </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./dataview.css'],\r\n    host: {\r\n        class: 'p-element'\r\n    }\r\n})\r\nexport class DataView implements OnInit, AfterContentInit, OnDestroy, BlockableUI, OnChanges {\r\n    @Input() paginator: boolean;\r\n\r\n    @Input() rows: number;\r\n\r\n    @Input() totalRecords: number;\r\n\r\n    @Input() pageLinks: number = 5;\r\n\r\n    @Input() rowsPerPageOptions: any[];\r\n\r\n    @Input() paginatorPosition: string = 'bottom';\r\n\r\n    @Input() alwaysShowPaginator: boolean = true;\r\n\r\n    @Input() paginatorDropdownAppendTo: any;\r\n\r\n    @Input() paginatorDropdownScrollHeight: string = '200px';\r\n\r\n    @Input() currentPageReportTemplate: string = '{currentPage} of {totalPages}';\r\n\r\n    @Input() showCurrentPageReport: boolean;\r\n\r\n    @Input() showJumpToPageDropdown: boolean;\r\n\r\n    @Input() showFirstLastIcon: boolean = true;\r\n\r\n    @Input() showPageLinks: boolean = true;\r\n\r\n    @Input() lazy: boolean;\r\n\r\n    @Input() emptyMessage: string = '';\r\n\r\n    @Output() onLazyLoad: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() gridStyleClass: string = '';\r\n\r\n    @Input() trackBy: Function = (index: number, item: any) => item;\r\n\r\n    @Input() filterBy: string;\r\n\r\n    @Input() filterLocale: string;\r\n\r\n    @Input() loading: boolean;\r\n\r\n    @Input() loadingIcon: string;\r\n\r\n    @Input() first: number = 0;\r\n\r\n    @Input() sortField: string;\r\n\r\n    @Input() sortOrder: number;\r\n\r\n    @Input() value: any[];\r\n\r\n    @Output() onPage: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onSort: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onChangeLayout: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChild(Header) header;\r\n\r\n    @ContentChild(Footer) footer;\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    _value: any[];\r\n\r\n    listItemTemplate: TemplateRef<any>;\r\n\r\n    gridItemTemplate: TemplateRef<any>;\r\n\r\n    itemTemplate: TemplateRef<any>;\r\n\r\n    headerTemplate: TemplateRef<any>;\r\n\r\n    emptyMessageTemplate: TemplateRef<any>;\r\n\r\n    footerTemplate: TemplateRef<any>;\r\n\r\n    paginatorLeftTemplate: TemplateRef<any>;\r\n\r\n    paginatorRightTemplate: TemplateRef<any>;\r\n\r\n    paginatorDropdownItemTemplate: TemplateRef<any>;\r\n\r\n    loadingIconTemplate: TemplateRef<any>;\r\n\r\n    listIconTemplate: TemplateRef<any>;\r\n\r\n    gridIconTemplate: TemplateRef<any>;\r\n\r\n    filteredValue: any[];\r\n\r\n    filterValue: string;\r\n\r\n    initialized: boolean;\r\n\r\n    _layout: string = 'list';\r\n\r\n    translationSubscription: Subscription;\r\n\r\n    @Input() get layout(): string {\r\n        return this._layout;\r\n    }\r\n\r\n    set layout(layout: string) {\r\n        this._layout = layout;\r\n\r\n        if (this.initialized) {\r\n            this.changeLayout(layout);\r\n        }\r\n    }\r\n\r\n    constructor(public el: ElementRef, public cd: ChangeDetectorRef, public filterService: FilterService, public config: PrimeNGConfig) {}\r\n\r\n    ngOnInit() {\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n\r\n        this.translationSubscription = this.config.translationObserver.subscribe(() => {\r\n            this.cd.markForCheck();\r\n        });\r\n        this.initialized = true;\r\n    }\r\n\r\n    ngOnChanges(simpleChanges: SimpleChanges) {\r\n        if (simpleChanges.value) {\r\n            this._value = simpleChanges.value.currentValue;\r\n            this.updateTotalRecords();\r\n\r\n            if (!this.lazy && this.hasFilter()) {\r\n                this.filter(this.filterValue);\r\n            }\r\n        }\r\n\r\n        if (simpleChanges.sortField || simpleChanges.sortOrder) {\r\n            //avoid triggering lazy load prior to lazy initialization at onInit\r\n            if (!this.lazy || this.initialized) {\r\n                this.sort();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'listItem':\r\n                    this.listItemTemplate = item.template;\r\n                    break;\r\n\r\n                case 'gridItem':\r\n                    this.gridItemTemplate = item.template;\r\n                    break;\r\n\r\n                case 'paginatorleft':\r\n                    this.paginatorLeftTemplate = item.template;\r\n                    break;\r\n\r\n                case 'paginatorright':\r\n                    this.paginatorRightTemplate = item.template;\r\n                    break;\r\n\r\n                case 'paginatordropdownitem':\r\n                    this.paginatorDropdownItemTemplate = item.template;\r\n                    break;\r\n\r\n                case 'empty':\r\n                    this.emptyMessageTemplate = item.template;\r\n                    break;\r\n\r\n                case 'header':\r\n                    this.headerTemplate = item.template;\r\n                    break;\r\n\r\n                case 'footer':\r\n                    this.footerTemplate = item.template;\r\n                    break;\r\n\r\n                case 'loadingicon':\r\n                    this.loadingIconTemplate = item.template;\r\n                    break;\r\n\r\n                case 'listicon':\r\n                    this.listIconTemplate = item.template;\r\n                    break;\r\n\r\n                case 'gridicon':\r\n                    this.gridIconTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n\r\n        this.updateItemTemplate();\r\n    }\r\n\r\n    updateItemTemplate() {\r\n        switch (this.layout) {\r\n            case 'list':\r\n                this.itemTemplate = this.listItemTemplate;\r\n                break;\r\n\r\n            case 'grid':\r\n                this.itemTemplate = this.gridItemTemplate;\r\n                break;\r\n        }\r\n    }\r\n\r\n    changeLayout(layout: string) {\r\n        this._layout = layout;\r\n        this.onChangeLayout.emit({\r\n            layout: this.layout\r\n        });\r\n        this.updateItemTemplate();\r\n\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    updateTotalRecords() {\r\n        this.totalRecords = this.lazy ? this.totalRecords : this._value ? this._value.length : 0;\r\n    }\r\n\r\n    paginate(event) {\r\n        this.first = event.first;\r\n        this.rows = event.rows;\r\n\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        }\r\n\r\n        this.onPage.emit({\r\n            first: this.first,\r\n            rows: this.rows\r\n        });\r\n    }\r\n\r\n    sort() {\r\n        this.first = 0;\r\n\r\n        if (this.lazy) {\r\n            this.onLazyLoad.emit(this.createLazyLoadMetadata());\r\n        } else if (this.value) {\r\n            this.value.sort((data1, data2) => {\r\n                let value1 = ObjectUtils.resolveFieldData(data1, this.sortField);\r\n                let value2 = ObjectUtils.resolveFieldData(data2, this.sortField);\r\n                let result = null;\r\n\r\n                if (value1 == null && value2 != null) result = -1;\r\n                else if (value1 != null && value2 == null) result = 1;\r\n                else if (value1 == null && value2 == null) result = 0;\r\n                else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2);\r\n                else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\r\n\r\n                return this.sortOrder * result;\r\n            });\r\n\r\n            if (this.hasFilter()) {\r\n                this.filter(this.filterValue);\r\n            }\r\n        }\r\n\r\n        this.onSort.emit({\r\n            sortField: this.sortField,\r\n            sortOrder: this.sortOrder\r\n        });\r\n    }\r\n\r\n    isEmpty() {\r\n        let data = this.filteredValue || this.value;\r\n        return data == null || data.length == 0;\r\n    }\r\n\r\n    createLazyLoadMetadata(): any {\r\n        return {\r\n            first: this.first,\r\n            rows: this.rows,\r\n            sortField: this.sortField,\r\n            sortOrder: this.sortOrder\r\n        };\r\n    }\r\n\r\n    getBlockableElement(): HTMLElement {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n\r\n    get emptyMessageLabel(): string {\r\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\r\n    }\r\n\r\n    filter(filter: string, filterMatchMode: string = 'contains') {\r\n        this.filterValue = filter;\r\n\r\n        if (this.value && this.value.length) {\r\n            let searchFields = this.filterBy.split(',');\r\n            this.filteredValue = this.filterService.filter(this.value, searchFields, filter, filterMatchMode, this.filterLocale);\r\n\r\n            if (this.filteredValue.length === this.value.length) {\r\n                this.filteredValue = null;\r\n            }\r\n\r\n            if (this.paginator) {\r\n                this.first = 0;\r\n                this.totalRecords = this.filteredValue ? this.filteredValue.length : this.value ? this.value.length : 0;\r\n            }\r\n\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n\r\n    hasFilter() {\r\n        return this.filterValue && this.filterValue.trim().length > 0;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.translationSubscription) {\r\n            this.translationSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-dataViewLayoutOptions',\r\n    template: `\r\n        <div [ngClass]=\"'p-dataview-layout-options p-selectbutton p-buttonset'\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <button type=\"button\" class=\"p-button p-button-icon-only\" [ngClass]=\"{ 'p-highlight': dv.layout === 'list' }\" (click)=\"changeLayout($event, 'list')\" (keydown.enter)=\"changeLayout($event, 'list')\">\r\n                <BarsIcon *ngIf=\"!dv.listIconTemplate\"/>\r\n                <ng-template *ngTemplateOutlet=\"dv.listIconTemplate\"></ng-template>\r\n            </button\r\n            ><button type=\"button\" class=\"p-button p-button-icon-only\" [ngClass]=\"{ 'p-highlight': dv.layout === 'grid' }\" (click)=\"changeLayout($event, 'grid')\" (keydown.enter)=\"changeLayout($event, 'grid')\">\r\n                <ThLargeIcon *ngIf=\"!dv.gridIconTemplate\"/>\r\n                <ng-template *ngTemplateOutlet=\"dv.gridIconTemplate\"></ng-template>\r\n            </button>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None,\r\n    host: {\r\n        class: 'p-element'\r\n    }\r\n})\r\nexport class DataViewLayoutOptions {\r\n    @Input() style: any;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    constructor(public dv: DataView) {}\r\n\r\n    changeLayout(event: Event, layout: string) {\r\n        this.dv.changeLayout(layout);\r\n        event.preventDefault();\r\n    }\r\n}\r\n@NgModule({\r\n    imports: [CommonModule, SharedModule, PaginatorModule, SpinnerIcon, BarsIcon, ThLargeIcon],\r\n    exports: [DataView, SharedModule, DataViewLayoutOptions],\r\n    declarations: [DataView, DataViewLayoutOptions]\r\n})\r\nexport class DataViewModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}