{"version":3,"file":"primeng-inputnumber.mjs","sources":["../../src/app/components/inputnumber/inputnumber.ts","../../src/app/components/inputnumber/primeng-inputnumber.ts"],"sourcesContent":["import { CommonModule, DOCUMENT } from '@angular/common';\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ContentChildren,\r\n    ElementRef,\r\n    EventEmitter,\r\n    forwardRef,\r\n    Inject,\r\n    Input,\r\n    NgModule,\r\n    OnInit,\r\n    Output,\r\n    QueryList,\r\n    SimpleChanges,\r\n    TemplateRef,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DomHandler } from 'primeng/dom';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\r\nimport { TimesIcon } from 'primeng/icons/times';\r\nimport { AngleUpIcon } from 'primeng/icons/angleup';\r\nimport { AngleDownIcon } from 'primeng/icons/angledown';\r\n\r\nexport const INPUTNUMBER_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => InputNumber),\r\n    multi: true\r\n};\r\n@Component({\r\n    selector: 'p-inputNumber',\r\n    template: `\r\n        <span\r\n            [ngClass]=\"{\r\n                'p-inputnumber p-component': true,\r\n                'p-inputnumber-buttons-stacked': this.showButtons && this.buttonLayout === 'stacked',\r\n                'p-inputnumber-buttons-horizontal': this.showButtons && this.buttonLayout === 'horizontal',\r\n                'p-inputnumber-buttons-vertical': this.showButtons && this.buttonLayout === 'vertical'\r\n            }\"\r\n            [ngStyle]=\"style\"\r\n            [class]=\"styleClass\"\r\n        >\r\n            <input\r\n                #input\r\n                [ngClass]=\"'p-inputnumber-input'\"\r\n                [ngStyle]=\"inputStyle\"\r\n                [class]=\"inputStyleClass\"\r\n                pInputText\r\n                [value]=\"formattedValue()\"\r\n                [attr.placeholder]=\"placeholder\"\r\n                [attr.title]=\"title\"\r\n                [attr.id]=\"inputId\"\r\n                [attr.size]=\"size\"\r\n                [attr.name]=\"name\"\r\n                [attr.autocomplete]=\"autocomplete\"\r\n                [attr.maxlength]=\"maxlength\"\r\n                [attr.tabindex]=\"tabindex\"\r\n                [attr.aria-label]=\"ariaLabel\"\r\n                [attr.aria-required]=\"ariaRequired\"\r\n                [disabled]=\"disabled\"\r\n                [attr.required]=\"required\"\r\n                [attr.min]=\"min\"\r\n                [attr.max]=\"max\"\r\n                [readonly]=\"readonly\"\r\n                inputmode=\"decimal\"\r\n                (input)=\"onUserInput($event)\"\r\n                (keydown)=\"onInputKeyDown($event)\"\r\n                (keypress)=\"onInputKeyPress($event)\"\r\n                (paste)=\"onPaste($event)\"\r\n                (click)=\"onInputClick()\"\r\n                (focus)=\"onInputFocus($event)\"\r\n                (blur)=\"onInputBlur($event)\"\r\n            />\r\n            <ng-container *ngIf=\"buttonLayout != 'vertical' && showClear && value\">\r\n                <TimesIcon *ngIf=\"!clearIconTemplate\" [ngClass]=\"'p-inputnumber-clear-icon'\" (click)=\"clear()\"/>\r\n                <span *ngIf=\"clearIconTemplate\" (click)=\"clear()\" class=\"p-inputnumber-clear-icon\">\r\n                    <ng-template *ngTemplateOutlet=\"clearIconTemplate\"></ng-template>\r\n                </span>            \r\n            </ng-container>\r\n\r\n            <span class=\"p-inputnumber-button-group\" *ngIf=\"showButtons && buttonLayout === 'stacked'\">\r\n                <button\r\n                    type=\"button\"\r\n                    pButton\r\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\r\n                    class=\"p-button-icon-only\"\r\n                    [class]=\"incrementButtonClass\"\r\n                    [disabled]=\"disabled\"\r\n                    (mousedown)=\"onUpButtonMouseDown($event)\"\r\n                    (mouseup)=\"onUpButtonMouseUp()\"\r\n                    (mouseleave)=\"onUpButtonMouseLeave()\"\r\n                    (keydown)=\"onUpButtonKeyDown($event)\"\r\n                    (keyup)=\"onUpButtonKeyUp()\"\r\n                    tabindex=\"-1\"\r\n                >\r\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\r\n                <ng-container *ngIf=\"!incrementButtonIcon\">\r\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\"/>\r\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\r\n                </ng-container>\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    pButton\r\n                    [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\r\n                    class=\"p-button-icon-only\"\r\n                    [class]=\"decrementButtonClass\"\r\n                    [disabled]=\"disabled\"\r\n                    (mousedown)=\"onDownButtonMouseDown($event)\"\r\n                    (mouseup)=\"onDownButtonMouseUp()\"\r\n                    (mouseleave)=\"onDownButtonMouseLeave()\"\r\n                    (keydown)=\"onDownButtonKeyDown($event)\"\r\n                    (keyup)=\"onDownButtonKeyUp()\"\r\n                    tabindex=\"-1\"\r\n                >\r\n                <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\r\n                <ng-container *ngIf=\"!decrementButtonIcon\">\r\n                    <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\"/>\r\n                    <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\r\n                </ng-container>\r\n            </button>\r\n            </span>\r\n            <button\r\n                type=\"button\"\r\n                pButton\r\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-up': true }\"\r\n                [class]=\"incrementButtonClass\"\r\n                class=\"p-button-icon-only\"\r\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\r\n                [disabled]=\"disabled\"\r\n                (mousedown)=\"onUpButtonMouseDown($event)\"\r\n                (mouseup)=\"onUpButtonMouseUp()\"\r\n                (mouseleave)=\"onUpButtonMouseLeave()\"\r\n                (keydown)=\"onUpButtonKeyDown($event)\"\r\n                (keyup)=\"onUpButtonKeyUp()\"\r\n                tabindex=\"-1\"\r\n            >\r\n                <span *ngIf=\"incrementButtonIcon\" [ngClass]=\"incrementButtonIcon\"></span>\r\n                <ng-container *ngIf=\"!incrementButtonIcon\">\r\n                    <AngleUpIcon *ngIf=\"!incrementButtonIconTemplate\"/>\r\n                    <ng-template *ngTemplateOutlet=\"incrementButtonIconTemplate\"></ng-template>\r\n                </ng-container>\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                pButton\r\n                [ngClass]=\"{ 'p-inputnumber-button p-inputnumber-button-down': true }\"\r\n                class=\"p-button-icon-only\"\r\n                [class]=\"decrementButtonClass\"\r\n                *ngIf=\"showButtons && buttonLayout !== 'stacked'\"\r\n                [disabled]=\"disabled\"\r\n                (mousedown)=\"onDownButtonMouseDown($event)\"\r\n                (mouseup)=\"onDownButtonMouseUp()\"\r\n                (mouseleave)=\"onDownButtonMouseLeave()\"\r\n                (keydown)=\"onDownButtonKeyDown($event)\"\r\n                (keyup)=\"onDownButtonKeyUp()\"\r\n                tabindex=\"-1\"\r\n            >\r\n            <span *ngIf=\"decrementButtonIcon\" [ngClass]=\"decrementButtonIcon\"></span>\r\n            <ng-container *ngIf=\"!decrementButtonIcon\">\r\n                <AngleDownIcon *ngIf=\"!decrementButtonIconTemplate\"/>\r\n                <ng-template *ngTemplateOutlet=\"decrementButtonIconTemplate\"></ng-template>\r\n            </ng-container>\r\n        </button>\r\n        </span>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [INPUTNUMBER_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None,\r\n    styleUrls: ['./inputnumber.css'],\r\n    host: {\r\n        class: 'p-element p-inputwrapper',\r\n        '[class.p-inputwrapper-filled]': 'filled',\r\n        '[class.p-inputwrapper-focus]': 'focused',\r\n        '[class.p-inputnumber-clearable]': 'showClear && buttonLayout != \"vertical\"'\r\n    }\r\n})\r\nexport class InputNumber implements ControlValueAccessor {\r\n    @Input() showButtons: boolean = false;\r\n\r\n    @Input() format: boolean = true;\r\n\r\n    @Input() buttonLayout: string = 'stacked';\r\n\r\n    @Input() inputId: string;\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() placeholder: string;\r\n\r\n    @Input() size: number;\r\n\r\n    @Input() maxlength: number;\r\n\r\n    @Input() tabindex: string;\r\n\r\n    @Input() title: string;\r\n\r\n    @Input() ariaLabel: string;\r\n\r\n    @Input() ariaRequired: boolean;\r\n\r\n    @Input() name: string;\r\n\r\n    @Input() required: boolean;\r\n\r\n    @Input() autocomplete: string;\r\n\r\n    @Input() min: number;\r\n\r\n    @Input() max: number;\r\n\r\n    @Input() incrementButtonClass: string;\r\n\r\n    @Input() decrementButtonClass: string;\r\n\r\n    @Input() incrementButtonIcon: string;\r\n\r\n    @Input() decrementButtonIcon: string;\r\n\r\n    @Input() readonly: boolean = false;\r\n\r\n    @Input() step: number = 1;\r\n\r\n    @Input() allowEmpty: boolean = true;\r\n\r\n    @Input() locale: string;\r\n\r\n    @Input() localeMatcher: string;\r\n\r\n    @Input() mode: string = 'decimal';\r\n\r\n    @Input() currency: string;\r\n\r\n    @Input() currencyDisplay: string;\r\n\r\n    @Input() useGrouping: boolean = true;\r\n\r\n    @Input() minFractionDigits: number;\r\n\r\n    @Input() maxFractionDigits: number;\r\n\r\n    @Input() prefix: string;\r\n\r\n    @Input() suffix: string;\r\n\r\n    @Input() inputStyle: any;\r\n\r\n    @Input() inputStyleClass: string;\r\n\r\n    @Input() showClear: boolean = false;\r\n\r\n    @ViewChild('input') input: ElementRef;\r\n\r\n    @Output() onInput: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onKeyDown: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onClear: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    clearIconTemplate: TemplateRef<any>;\r\n\r\n    incrementButtonIconTemplate: TemplateRef<any>;\r\n\r\n    decrementButtonIconTemplate: TemplateRef<any>;\r\n\r\n    value: number;\r\n\r\n    onModelChange: Function = () => {};\r\n\r\n    onModelTouched: Function = () => {};\r\n\r\n    focused: boolean;\r\n\r\n    initialized: boolean;\r\n\r\n    groupChar: string = '';\r\n\r\n    prefixChar: string = '';\r\n\r\n    suffixChar: string = '';\r\n\r\n    isSpecialChar: boolean;\r\n\r\n    timer: any;\r\n\r\n    lastValue: string;\r\n\r\n    _numeral: any;\r\n\r\n    numberFormat: any;\r\n\r\n    _decimal: any;\r\n\r\n    _group: any;\r\n\r\n    _minusSign: any;\r\n\r\n    _currency: any;\r\n\r\n    _prefix: any;\r\n\r\n    _suffix: any;\r\n\r\n    _index: any;\r\n\r\n    _disabled: boolean;\r\n\r\n    @Input() get disabled(): boolean {\r\n        return this._disabled;\r\n    }\r\n\r\n    set disabled(disabled: boolean) {\r\n        if (disabled) this.focused = false;\r\n\r\n        this._disabled = disabled;\r\n\r\n        if (this.timer) this.clearTimer();\r\n    }\r\n\r\n    constructor(@Inject(DOCUMENT) private document: Document, public el: ElementRef, private cd: ChangeDetectorRef) {}\r\n\r\n    ngOnChanges(simpleChange: SimpleChanges) {\r\n        const props = ['locale', 'localeMatcher', 'mode', 'currency', 'currencyDisplay', 'useGrouping', 'minFractionDigits', 'maxFractionDigits', 'prefix', 'suffix'];\r\n        if (props.some((p) => !!simpleChange[p])) {\r\n            this.updateConstructParser();\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'clearicon':\r\n                    this.clearIconTemplate = item.template;\r\n                    break;\r\n\r\n                case 'incrementbuttonicon':\r\n                    this.incrementButtonIconTemplate = item.template;\r\n                    break;\r\n\r\n                case 'decrementbuttonicon':\r\n                    this.decrementButtonIconTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.constructParser();\r\n\r\n        this.initialized = true;\r\n    }\r\n\r\n    getOptions() {\r\n        return {\r\n            localeMatcher: this.localeMatcher,\r\n            style: this.mode,\r\n            currency: this.currency,\r\n            currencyDisplay: this.currencyDisplay,\r\n            useGrouping: this.useGrouping,\r\n            minimumFractionDigits: this.minFractionDigits,\r\n            maximumFractionDigits: this.maxFractionDigits\r\n        };\r\n    }\r\n\r\n    constructParser() {\r\n        this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());\r\n        const numerals = [...new Intl.NumberFormat(this.locale, { useGrouping: false }).format(9876543210)].reverse();\r\n        const index = new Map(numerals.map((d, i) => [d, i]));\r\n        this._numeral = new RegExp(`[${numerals.join('')}]`, 'g');\r\n        this._group = this.getGroupingExpression();\r\n        this._minusSign = this.getMinusSignExpression();\r\n        this._currency = this.getCurrencyExpression();\r\n        this._decimal = this.getDecimalExpression();\r\n        this._suffix = this.getSuffixExpression();\r\n        this._prefix = this.getPrefixExpression();\r\n        this._index = (d) => index.get(d);\r\n    }\r\n\r\n    updateConstructParser() {\r\n        if (this.initialized) {\r\n            this.constructParser();\r\n        }\r\n    }\r\n\r\n    escapeRegExp(text) {\r\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n    }\r\n\r\n    getDecimalExpression() {\r\n        const formatter = new Intl.NumberFormat(this.locale, { ...this.getOptions(), useGrouping: false });\r\n        return new RegExp(`[${formatter.format(1.1).replace(this._currency, '').trim().replace(this._numeral, '')}]`, 'g');\r\n    }\r\n\r\n    getGroupingExpression() {\r\n        const formatter = new Intl.NumberFormat(this.locale, { useGrouping: true });\r\n        this.groupChar = formatter.format(1000000).trim().replace(this._numeral, '').charAt(0);\r\n        return new RegExp(`[${this.groupChar}]`, 'g');\r\n    }\r\n\r\n    getMinusSignExpression() {\r\n        const formatter = new Intl.NumberFormat(this.locale, { useGrouping: false });\r\n        return new RegExp(`[${formatter.format(-1).trim().replace(this._numeral, '')}]`, 'g');\r\n    }\r\n\r\n    getCurrencyExpression() {\r\n        if (this.currency) {\r\n            const formatter = new Intl.NumberFormat(this.locale, { style: 'currency', currency: this.currency, currencyDisplay: this.currencyDisplay, minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n            return new RegExp(`[${formatter.format(1).replace(/\\s/g, '').replace(this._numeral, '').replace(this._group, '')}]`, 'g');\r\n        }\r\n\r\n        return new RegExp(`[]`, 'g');\r\n    }\r\n\r\n    getPrefixExpression() {\r\n        if (this.prefix) {\r\n            this.prefixChar = this.prefix;\r\n        } else {\r\n            const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay });\r\n            this.prefixChar = formatter.format(1).split('1')[0];\r\n        }\r\n\r\n        return new RegExp(`${this.escapeRegExp(this.prefixChar || '')}`, 'g');\r\n    }\r\n\r\n    getSuffixExpression() {\r\n        if (this.suffix) {\r\n            this.suffixChar = this.suffix;\r\n        } else {\r\n            const formatter = new Intl.NumberFormat(this.locale, { style: this.mode, currency: this.currency, currencyDisplay: this.currencyDisplay, minimumFractionDigits: 0, maximumFractionDigits: 0 });\r\n            this.suffixChar = formatter.format(1).split('1')[1];\r\n        }\r\n\r\n        return new RegExp(`${this.escapeRegExp(this.suffixChar || '')}`, 'g');\r\n    }\r\n\r\n    formatValue(value) {\r\n        if (value != null) {\r\n            if (value === '-') {\r\n                // Minus sign\r\n                return value;\r\n            }\r\n\r\n            if (this.format) {\r\n                let formatter = new Intl.NumberFormat(this.locale, this.getOptions());\r\n                let formattedValue = formatter.format(value);\r\n                if (this.prefix) {\r\n                    formattedValue = this.prefix + formattedValue;\r\n                }\r\n\r\n                if (this.suffix) {\r\n                    formattedValue = formattedValue + this.suffix;\r\n                }\r\n\r\n                return formattedValue;\r\n            }\r\n\r\n            return value.toString();\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    parseValue(text) {\r\n        let filteredText = text\r\n            .replace(this._suffix, '')\r\n            .replace(this._prefix, '')\r\n            .trim()\r\n            .replace(/\\s/g, '')\r\n            .replace(this._currency, '')\r\n            .replace(this._group, '')\r\n            .replace(this._minusSign, '-')\r\n            .replace(this._decimal, '.')\r\n            .replace(this._numeral, this._index);\r\n\r\n        if (filteredText) {\r\n            if (filteredText === '-')\r\n                // Minus sign\r\n                return filteredText;\r\n\r\n            let parsedValue = +filteredText;\r\n            return isNaN(parsedValue) ? null : parsedValue;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    repeat(event, interval, dir) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n\r\n        let i = interval || 500;\r\n\r\n        this.clearTimer();\r\n        this.timer = setTimeout(() => {\r\n            this.repeat(event, 40, dir);\r\n        }, i);\r\n\r\n        this.spin(event, dir);\r\n    }\r\n\r\n    spin(event, dir) {\r\n        let step = this.step * dir;\r\n        let currentValue = this.parseValue(this.input.nativeElement.value) || 0;\r\n        let newValue = this.validateValue(currentValue + step);\r\n        if (this.maxlength && this.maxlength < this.formatValue(newValue).length) {\r\n            return;\r\n        }\r\n\r\n        this.updateInput(newValue, null, 'spin', null);\r\n        this.updateModel(event, newValue);\r\n\r\n        this.handleOnInput(event, currentValue, newValue);\r\n    }\r\n\r\n    clear() {\r\n        this.value = null;\r\n        this.onModelChange(this.value);\r\n        this.onClear.emit();\r\n    }\r\n\r\n    onUpButtonMouseDown(event) {\r\n        if (event.button === 2) {\r\n            this.clearTimer();\r\n            return;\r\n        }\r\n\r\n        this.input.nativeElement.focus();\r\n        this.repeat(event, null, 1);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onUpButtonMouseUp() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onUpButtonMouseLeave() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onUpButtonKeyDown(event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            this.repeat(event, null, 1);\r\n        }\r\n    }\r\n\r\n    onUpButtonKeyUp() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onDownButtonMouseDown(event) {\r\n        if (event.button === 2) {\r\n            this.clearTimer();\r\n            return;\r\n        }\r\n\r\n        this.input.nativeElement.focus();\r\n        this.repeat(event, null, -1);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDownButtonMouseUp() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onDownButtonMouseLeave() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onDownButtonKeyUp() {\r\n        this.clearTimer();\r\n    }\r\n\r\n    onDownButtonKeyDown(event) {\r\n        if (event.keyCode === 32 || event.keyCode === 13) {\r\n            this.repeat(event, null, -1);\r\n        }\r\n    }\r\n\r\n    onUserInput(event) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n\r\n        if (this.isSpecialChar) {\r\n            event.target.value = this.lastValue;\r\n        }\r\n        this.isSpecialChar = false;\r\n    }\r\n\r\n    onInputKeyDown(event) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n\r\n        this.lastValue = event.target.value;\r\n        if (event.shiftKey || event.altKey) {\r\n            this.isSpecialChar = true;\r\n            return;\r\n        }\r\n\r\n        let selectionStart = event.target.selectionStart;\r\n        let selectionEnd = event.target.selectionEnd;\r\n        let inputValue = event.target.value;\r\n        let newValueStr = null;\r\n\r\n        if (event.altKey) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        switch (event.which) {\r\n            //up\r\n            case 38:\r\n                this.spin(event, 1);\r\n                event.preventDefault();\r\n                break;\r\n\r\n            //down\r\n            case 40:\r\n                this.spin(event, -1);\r\n                event.preventDefault();\r\n                break;\r\n\r\n            //left\r\n            case 37:\r\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart - 1))) {\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n\r\n            //right\r\n            case 39:\r\n                if (!this.isNumeralChar(inputValue.charAt(selectionStart))) {\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n\r\n            //enter\r\n            case 13:\r\n                newValueStr = this.validateValue(this.parseValue(this.input.nativeElement.value));\r\n                this.input.nativeElement.value = this.formatValue(newValueStr);\r\n                this.input.nativeElement.setAttribute('aria-valuenow', newValueStr);\r\n                this.updateModel(event, newValueStr);\r\n                break;\r\n\r\n            //backspace\r\n            case 8: {\r\n                event.preventDefault();\r\n\r\n                if (selectionStart === selectionEnd) {\r\n                    const deleteChar = inputValue.charAt(selectionStart - 1);\r\n                    const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue);\r\n\r\n                    if (this.isNumeralChar(deleteChar)) {\r\n                        const decimalLength = this.getDecimalLength(inputValue);\r\n\r\n                        if (this._group.test(deleteChar)) {\r\n                            this._group.lastIndex = 0;\r\n                            newValueStr = inputValue.slice(0, selectionStart - 2) + inputValue.slice(selectionStart - 1);\r\n                        } else if (this._decimal.test(deleteChar)) {\r\n                            this._decimal.lastIndex = 0;\r\n\r\n                            if (decimalLength) {\r\n                                this.input.nativeElement.setSelectionRange(selectionStart - 1, selectionStart - 1);\r\n                            } else {\r\n                                newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\r\n                            }\r\n                        } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\r\n                            const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\r\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + insertedText + inputValue.slice(selectionStart);\r\n                        } else if (decimalCharIndexWithoutPrefix === 1) {\r\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + '0' + inputValue.slice(selectionStart);\r\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\r\n                        } else {\r\n                            newValueStr = inputValue.slice(0, selectionStart - 1) + inputValue.slice(selectionStart);\r\n                        }\r\n                    }\r\n\r\n                    this.updateValue(event, newValueStr, null, 'delete-single');\r\n                } else {\r\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\r\n                    this.updateValue(event, newValueStr, null, 'delete-range');\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            // del\r\n            case 46:\r\n                event.preventDefault();\r\n\r\n                if (selectionStart === selectionEnd) {\r\n                    const deleteChar = inputValue.charAt(selectionStart);\r\n                    const { decimalCharIndex, decimalCharIndexWithoutPrefix } = this.getDecimalCharIndexes(inputValue);\r\n\r\n                    if (this.isNumeralChar(deleteChar)) {\r\n                        const decimalLength = this.getDecimalLength(inputValue);\r\n\r\n                        if (this._group.test(deleteChar)) {\r\n                            this._group.lastIndex = 0;\r\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 2);\r\n                        } else if (this._decimal.test(deleteChar)) {\r\n                            this._decimal.lastIndex = 0;\r\n\r\n                            if (decimalLength) {\r\n                                this.input.nativeElement.setSelectionRange(selectionStart + 1, selectionStart + 1);\r\n                            } else {\r\n                                newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\r\n                            }\r\n                        } else if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\r\n                            const insertedText = this.isDecimalMode() && (this.minFractionDigits || 0) < decimalLength ? '' : '0';\r\n                            newValueStr = inputValue.slice(0, selectionStart) + insertedText + inputValue.slice(selectionStart + 1);\r\n                        } else if (decimalCharIndexWithoutPrefix === 1) {\r\n                            newValueStr = inputValue.slice(0, selectionStart) + '0' + inputValue.slice(selectionStart + 1);\r\n                            newValueStr = this.parseValue(newValueStr) > 0 ? newValueStr : '';\r\n                        } else {\r\n                            newValueStr = inputValue.slice(0, selectionStart) + inputValue.slice(selectionStart + 1);\r\n                        }\r\n                    }\r\n\r\n                    this.updateValue(event, newValueStr, null, 'delete-back-single');\r\n                } else {\r\n                    newValueStr = this.deleteRange(inputValue, selectionStart, selectionEnd);\r\n                    this.updateValue(event, newValueStr, null, 'delete-range');\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.onKeyDown.emit(event);\r\n    }\r\n\r\n    onInputKeyPress(event) {\r\n        if (this.readonly) {\r\n            return;\r\n        }\r\n\r\n        let code = event.which || event.keyCode;\r\n        let char = String.fromCharCode(code);\r\n        const isDecimalSign = this.isDecimalSign(char);\r\n        const isMinusSign = this.isMinusSign(char);\r\n\r\n        if (code != 13) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        if ((48 <= code && code <= 57) || isMinusSign || isDecimalSign) {\r\n            this.insert(event, char, { isDecimalSign, isMinusSign });\r\n        }\r\n    }\r\n\r\n    onPaste(event) {\r\n        if (!this.disabled && !this.readonly) {\r\n            event.preventDefault();\r\n            let data = (event.clipboardData || this.document.defaultView['clipboardData']).getData('Text');\r\n            if (data) {\r\n                let filteredData = this.parseValue(data);\r\n                if (filteredData != null) {\r\n                    this.insert(event, filteredData.toString());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    allowMinusSign() {\r\n        return this.min == null || this.min < 0;\r\n    }\r\n\r\n    isMinusSign(char) {\r\n        if (this._minusSign.test(char) || char === '-') {\r\n            this._minusSign.lastIndex = 0;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isDecimalSign(char) {\r\n        if (this._decimal.test(char)) {\r\n            this._decimal.lastIndex = 0;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isDecimalMode() {\r\n        return this.mode === 'decimal';\r\n    }\r\n\r\n    getDecimalCharIndexes(val) {\r\n        let decimalCharIndex = val.search(this._decimal);\r\n        this._decimal.lastIndex = 0;\r\n\r\n        const filteredVal = val.replace(this._prefix, '').trim().replace(/\\s/g, '').replace(this._currency, '');\r\n        const decimalCharIndexWithoutPrefix = filteredVal.search(this._decimal);\r\n        this._decimal.lastIndex = 0;\r\n\r\n        return { decimalCharIndex, decimalCharIndexWithoutPrefix };\r\n    }\r\n\r\n    getCharIndexes(val) {\r\n        const decimalCharIndex = val.search(this._decimal);\r\n        this._decimal.lastIndex = 0;\r\n        const minusCharIndex = val.search(this._minusSign);\r\n        this._minusSign.lastIndex = 0;\r\n        const suffixCharIndex = val.search(this._suffix);\r\n        this._suffix.lastIndex = 0;\r\n        const currencyCharIndex = val.search(this._currency);\r\n        this._currency.lastIndex = 0;\r\n\r\n        return { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex };\r\n    }\r\n\r\n    insert(event, text, sign = { isDecimalSign: false, isMinusSign: false }) {\r\n        const minusCharIndexOnText = text.search(this._minusSign);\r\n        this._minusSign.lastIndex = 0;\r\n        if (!this.allowMinusSign() && minusCharIndexOnText !== -1) {\r\n            return;\r\n        }\r\n\r\n        let selectionStart = this.input.nativeElement.selectionStart;\r\n        let selectionEnd = this.input.nativeElement.selectionEnd;\r\n        let inputValue = this.input.nativeElement.value.trim();\r\n        const { decimalCharIndex, minusCharIndex, suffixCharIndex, currencyCharIndex } = this.getCharIndexes(inputValue);\r\n        let newValueStr;\r\n\r\n        if (sign.isMinusSign) {\r\n            if (selectionStart === 0) {\r\n                newValueStr = inputValue;\r\n                if (minusCharIndex === -1 || selectionEnd !== 0) {\r\n                    newValueStr = this.insertText(inputValue, text, 0, selectionEnd);\r\n                }\r\n\r\n                this.updateValue(event, newValueStr, text, 'insert');\r\n            }\r\n        } else if (sign.isDecimalSign) {\r\n            if (decimalCharIndex > 0 && selectionStart === decimalCharIndex) {\r\n                this.updateValue(event, inputValue, text, 'insert');\r\n            } else if (decimalCharIndex > selectionStart && decimalCharIndex < selectionEnd) {\r\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\r\n                this.updateValue(event, newValueStr, text, 'insert');\r\n            } else if (decimalCharIndex === -1 && this.maxFractionDigits) {\r\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\r\n                this.updateValue(event, newValueStr, text, 'insert');\r\n            }\r\n        } else {\r\n            const maxFractionDigits = this.numberFormat.resolvedOptions().maximumFractionDigits;\r\n            const operation = selectionStart !== selectionEnd ? 'range-insert' : 'insert';\r\n\r\n            if (decimalCharIndex > 0 && selectionStart > decimalCharIndex) {\r\n                if (selectionStart + text.length - (decimalCharIndex + 1) <= maxFractionDigits) {\r\n                    const charIndex = currencyCharIndex >= selectionStart ? currencyCharIndex - 1 : suffixCharIndex >= selectionStart ? suffixCharIndex : inputValue.length;\r\n\r\n                    newValueStr = inputValue.slice(0, selectionStart) + text + inputValue.slice(selectionStart + text.length, charIndex) + inputValue.slice(charIndex);\r\n                    this.updateValue(event, newValueStr, text, operation);\r\n                }\r\n            } else {\r\n                newValueStr = this.insertText(inputValue, text, selectionStart, selectionEnd);\r\n                this.updateValue(event, newValueStr, text, operation);\r\n            }\r\n        }\r\n    }\r\n\r\n    insertText(value, text, start, end) {\r\n        let textSplit = text === '.' ? text : text.split('.');\r\n\r\n        if (textSplit.length === 2) {\r\n            const decimalCharIndex = value.slice(start, end).search(this._decimal);\r\n            this._decimal.lastIndex = 0;\r\n            return decimalCharIndex > 0 ? value.slice(0, start) + this.formatValue(text) + value.slice(end) : value || this.formatValue(text);\r\n        } else if (end - start === value.length) {\r\n            return this.formatValue(text);\r\n        } else if (start === 0) {\r\n            return text + value.slice(end);\r\n        } else if (end === value.length) {\r\n            return value.slice(0, start) + text;\r\n        } else {\r\n            return value.slice(0, start) + text + value.slice(end);\r\n        }\r\n    }\r\n\r\n    deleteRange(value, start, end) {\r\n        let newValueStr;\r\n\r\n        if (end - start === value.length) newValueStr = '';\r\n        else if (start === 0) newValueStr = value.slice(end);\r\n        else if (end === value.length) newValueStr = value.slice(0, start);\r\n        else newValueStr = value.slice(0, start) + value.slice(end);\r\n\r\n        return newValueStr;\r\n    }\r\n\r\n    initCursor() {\r\n        let selectionStart = this.input.nativeElement.selectionStart;\r\n        let inputValue = this.input.nativeElement.value;\r\n        let valueLength = inputValue.length;\r\n        let index = null;\r\n\r\n        // remove prefix\r\n        let prefixLength = (this.prefixChar || '').length;\r\n        inputValue = inputValue.replace(this._prefix, '');\r\n        selectionStart = selectionStart - prefixLength;\r\n\r\n        let char = inputValue.charAt(selectionStart);\r\n        if (this.isNumeralChar(char)) {\r\n            return selectionStart + prefixLength;\r\n        }\r\n\r\n        //left\r\n        let i = selectionStart - 1;\r\n        while (i >= 0) {\r\n            char = inputValue.charAt(i);\r\n            if (this.isNumeralChar(char)) {\r\n                index = i + prefixLength;\r\n                break;\r\n            } else {\r\n                i--;\r\n            }\r\n        }\r\n\r\n        if (index !== null) {\r\n            this.input.nativeElement.setSelectionRange(index + 1, index + 1);\r\n        } else {\r\n            i = selectionStart;\r\n            while (i < valueLength) {\r\n                char = inputValue.charAt(i);\r\n                if (this.isNumeralChar(char)) {\r\n                    index = i + prefixLength;\r\n                    break;\r\n                } else {\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            if (index !== null) {\r\n                this.input.nativeElement.setSelectionRange(index, index);\r\n            }\r\n        }\r\n\r\n        return index || 0;\r\n    }\r\n\r\n    onInputClick() {\r\n        const currentValue = this.input.nativeElement.value;\r\n        if (!this.readonly && currentValue !== DomHandler.getSelection()) {\r\n            this.initCursor();\r\n        }\r\n    }\r\n\r\n    isNumeralChar(char) {\r\n        if (char.length === 1 && (this._numeral.test(char) || this._decimal.test(char) || this._group.test(char) || this._minusSign.test(char))) {\r\n            this.resetRegex();\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    resetRegex() {\r\n        this._numeral.lastIndex = 0;\r\n        this._decimal.lastIndex = 0;\r\n        this._group.lastIndex = 0;\r\n        this._minusSign.lastIndex = 0;\r\n    }\r\n\r\n    updateValue(event, valueStr, insertedValueStr, operation) {\r\n        let currentValue = this.input.nativeElement.value;\r\n        let newValue = null;\r\n\r\n        if (valueStr != null) {\r\n            newValue = this.parseValue(valueStr);\r\n            newValue = !newValue && !this.allowEmpty ? 0 : newValue;\r\n            this.updateInput(newValue, insertedValueStr, operation, valueStr);\r\n\r\n            this.handleOnInput(event, currentValue, newValue);\r\n        }\r\n    }\r\n\r\n    handleOnInput(event, currentValue, newValue) {\r\n        if (this.isValueChanged(currentValue, newValue)) {\r\n            this.input.nativeElement.value = this.formatValue(newValue);\r\n            this.input.nativeElement.setAttribute('aria-valuenow', newValue);\r\n            this.updateModel(event, newValue);\r\n            this.onInput.emit({ originalEvent: event, value: newValue, formattedValue: currentValue });\r\n        }\r\n    }\r\n\r\n    isValueChanged(currentValue, newValue) {\r\n        if (newValue === null && currentValue !== null) {\r\n            return true;\r\n        }\r\n\r\n        if (newValue != null) {\r\n            let parsedCurrentValue = typeof currentValue === 'string' ? this.parseValue(currentValue) : currentValue;\r\n            return newValue !== parsedCurrentValue;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    validateValue(value) {\r\n        if (value === '-' || value == null) {\r\n            return null;\r\n        }\r\n\r\n        if (this.min != null && value < this.min) {\r\n            return this.min;\r\n        }\r\n\r\n        if (this.max != null && value > this.max) {\r\n            return this.max;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    updateInput(value, insertedValueStr, operation, valueStr) {\r\n        insertedValueStr = insertedValueStr || '';\r\n\r\n        let inputValue = this.input.nativeElement.value;\r\n        let newValue = this.formatValue(value);\r\n        let currentLength = inputValue.length;\r\n\r\n        if (newValue !== valueStr) {\r\n            newValue = this.concatValues(newValue, valueStr);\r\n        }\r\n\r\n        if (currentLength === 0) {\r\n            this.input.nativeElement.value = newValue;\r\n            this.input.nativeElement.setSelectionRange(0, 0);\r\n            const index = this.initCursor();\r\n            const selectionEnd = index + insertedValueStr.length;\r\n            this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n        } else {\r\n            let selectionStart = this.input.nativeElement.selectionStart;\r\n            let selectionEnd = this.input.nativeElement.selectionEnd;\r\n            if (this.maxlength && this.maxlength < newValue.length) {\r\n                return;\r\n            }\r\n\r\n            this.input.nativeElement.value = newValue;\r\n            let newLength = newValue.length;\r\n\r\n            if (operation === 'range-insert') {\r\n                const startValue = this.parseValue((inputValue || '').slice(0, selectionStart));\r\n                const startValueStr = startValue !== null ? startValue.toString() : '';\r\n                const startExpr = startValueStr.split('').join(`(${this.groupChar})?`);\r\n                const sRegex = new RegExp(startExpr, 'g');\r\n                sRegex.test(newValue);\r\n\r\n                const tExpr = insertedValueStr.split('').join(`(${this.groupChar})?`);\r\n                const tRegex = new RegExp(tExpr, 'g');\r\n                tRegex.test(newValue.slice(sRegex.lastIndex));\r\n\r\n                selectionEnd = sRegex.lastIndex + tRegex.lastIndex;\r\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            } else if (newLength === currentLength) {\r\n                if (operation === 'insert' || operation === 'delete-back-single') this.input.nativeElement.setSelectionRange(selectionEnd + 1, selectionEnd + 1);\r\n                else if (operation === 'delete-single') this.input.nativeElement.setSelectionRange(selectionEnd - 1, selectionEnd - 1);\r\n                else if (operation === 'delete-range' || operation === 'spin') this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            } else if (operation === 'delete-back-single') {\r\n                let prevChar = inputValue.charAt(selectionEnd - 1);\r\n                let nextChar = inputValue.charAt(selectionEnd);\r\n                let diff = currentLength - newLength;\r\n                let isGroupChar = this._group.test(nextChar);\r\n\r\n                if (isGroupChar && diff === 1) {\r\n                    selectionEnd += 1;\r\n                } else if (!isGroupChar && this.isNumeralChar(prevChar)) {\r\n                    selectionEnd += -1 * diff + 1;\r\n                }\r\n\r\n                this._group.lastIndex = 0;\r\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            } else if (inputValue === '-' && operation === 'insert') {\r\n                this.input.nativeElement.setSelectionRange(0, 0);\r\n                const index = this.initCursor();\r\n                const selectionEnd = index + insertedValueStr.length + 1;\r\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            } else {\r\n                selectionEnd = selectionEnd + (newLength - currentLength);\r\n                this.input.nativeElement.setSelectionRange(selectionEnd, selectionEnd);\r\n            }\r\n        }\r\n\r\n        this.input.nativeElement.setAttribute('aria-valuenow', value);\r\n    }\r\n\r\n    concatValues(val1, val2) {\r\n        if (val1 && val2) {\r\n            let decimalCharIndex = val2.search(this._decimal);\r\n            this._decimal.lastIndex = 0;\r\n\r\n            if (this.suffixChar) {\r\n                return val1.replace(this.suffixChar, '').split(this._decimal)[0] + val2.replace(this.suffixChar, '').slice(decimalCharIndex) + this.suffixChar;\r\n            } else {\r\n                return decimalCharIndex !== -1 ? val1.split(this._decimal)[0] + val2.slice(decimalCharIndex) : val1;\r\n            }\r\n        }\r\n        return val1;\r\n    }\r\n\r\n    getDecimalLength(value) {\r\n        if (value) {\r\n            const valueSplit = value.split(this._decimal);\r\n\r\n            if (valueSplit.length === 2) {\r\n                return valueSplit[1].replace(this._suffix, '').trim().replace(/\\s/g, '').replace(this._currency, '').length;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    onInputFocus(event) {\r\n        this.focused = true;\r\n        this.onFocus.emit(event);\r\n    }\r\n\r\n    onInputBlur(event) {\r\n        this.focused = false;\r\n\r\n        let newValue = this.validateValue(this.parseValue(this.input.nativeElement.value));\r\n        this.input.nativeElement.value = this.formatValue(newValue);\r\n        this.input.nativeElement.setAttribute('aria-valuenow', newValue);\r\n        this.updateModel(event, newValue);\r\n\r\n        this.onBlur.emit(event);\r\n    }\r\n\r\n    formattedValue() {\r\n        const val = !this.value && !this.allowEmpty ? 0 : this.value;\r\n        return this.formatValue(val);\r\n    }\r\n\r\n    updateModel(event, value) {\r\n        if (this.value !== value) {\r\n            this.value = value;\r\n            this.onModelChange(value);\r\n        }\r\n\r\n        this.onModelTouched();\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        this.value = value;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    setDisabledState(val: boolean): void {\r\n        this.disabled = val;\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    get filled() {\r\n        return this.value != null && this.value.toString().length > 0;\r\n    }\r\n\r\n    clearTimer() {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    }\r\n\r\n    getFormatter() {\r\n        return this.numberFormat;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule, InputTextModule, ButtonModule, TimesIcon, AngleUpIcon, AngleDownIcon],\r\n    exports: [InputNumber, SharedModule],\r\n    declarations: [InputNumber]\r\n})\r\nexport class InputNumberModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}